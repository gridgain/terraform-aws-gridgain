deploy:
  env: st # provisioning.deploy.env
  venue: cluster # provisioning.deploy.venue
  cloud: aws # provisioning.deploy.cloud
  account: 705859261108 # provisioning.deploy.account
  layer: base,nebula # provisioning.deploy.layer
  target: spoke,spoke # provisioning.deploy.target
  product: nebula # provisioning.deploy.product
  customer: shared # provisioning.deploy.customer
  united_id: us-east # selected region, by default provisioning.deploy.united_id
  cluster_id: e48afc11-f0ee-450f-88e1-e67737d1a0ea # pre-generated by backend, ignite_cluster_id

spoke_net:
  vpc_bitmask: 24 # provisioning.spoke_net.vpc_bitmask
  tgw_bitmask: 28 # provisioning.spoke_net.tgw_bitmask
  pvt_bitmask: 26 # provisioning.spoke_net.pvt_bitmask

ggmc:
  state: running # running | suspended
  product_ver: 8.8.20 # provisioning.ggmc.product_ver
  ami_purpose: nebula # provisioning.ggmc.ami_purpose
  ami_version: gridgain-ultimate-8.8.20-v00.05 # provisioning.ggmc.ami_version
  backend_api: https://staging.gridgain-nebula-test.com/api/v1/ # provisioning.ggmc.backend_api
  vault_addr: https://vault.st.gridgain-nebula-test.com # provisioning.ggmc.vault_addr
  vault_mount: terra # provisioning.ggmc.vault_mount
  subnet_type: PVT # provisioning.ggmc.subnet_type
  tls_client: "TLSv1.3,TLSv1.2" # provisioning.ggmc.tls_client
  tls_https: "TLSv1.3,TLSv1.2" # provisioning.ggmc.tls_https
  az_count: 2 # we do support 1 or 2, if number of nodes more then 1 - 2 zones
  node:
    type: "t3.micro" # collected from customer, ec2_instance_type
    count: 5 # total number of nodes, zone 1 will get one more if odd number
    volumes:
      - name: root
        size: U.GB # ec2_root_disk_size
        iops: 4000 # ec2_root_disk_iops
  config:
    heap:
      size: U.Bytes # GG_HEAP_SIZE
    data:
      default:
        - name: default
          size: U.Bytes # gg_data_region_size
          persist: true # DATA_REGION_PERSISTENT
      custom: # custom_data_regions
        - name: region-1
          size: U.Bytes
          persist: true
  access:
    users:
      - meta: rover
        email: cm92ZXIK # cc user email
        login: cm92ZXIK # cc user login
        password: cm92ZXIK # cc user password
      - meta: api
        email: YXBpCg== # USER_EMAIL_VAR_NAME
        login: YXBpCg== # USER_LOGIN_VAR_NAME
        password: YXBpCg== # USER_PASSWORD_VAR_NAME
      - meta: server
        email: c2VydmVyCg== #
        login: c2VydmVyCg== #
        password: c2VydmVyCg== #
  encryption:
    enabled: true
    cmk_id: customer-managed-kms-key-id # collected from customer
    role_name: nebula-shared-us-east-e48afc11-f0ee-450f-88e1-e67737d1a0ea-st-role # pre-generated by backend
    external_id: some-id-uuid-for-example # pre-generated by backend

public_access:
  enabled: true
  rules:
    - range: 10.0.0.0/8
      ports:
        - 10800
        - 443

private_link:
  enabled: true # enabled by customer
  allowed_principals:
    - customer-account-id-1 # account id where the private link must be available
    - customer-account-id-2
